@page "/"

<PageTitle>Weather forecast</PageTitle>

@using Weather.Data
@inject WeatherForecastService ForecastService

<h1>Weather forecast</h1>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>@WeatherLocation.City, @WeatherLocation.Region, @WeatherLocation.Country</h2>
    <p>@WeatherLocation.Latitude, @WeatherLocation.Longitude</p>
    <p>@WeatherLocation.LocalTime</p><br/>
    <p>@CurrentWeather.CurrTemp</p>
    <p>@CurrentWeather.FeelsLike</p>
    <p>@CurrentWeather.CurrWind</p>
    <p>@CurrentWeather.CurrSummary</p>
    <img src=@CurrentWeather.CurrICON/>     

    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temperature</th>
                <th>Wind speed</th>
                <th>Chance of rain</th>
                <th>Chance of snow</th>
                <th>Summary</th>
                <th>Icon</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC°C</td>
                    <td>@forecast.MaxWind km/h</td>
                    <td>@forecast.RainChance%</td>
                    <td>@forecast.SnowChance%</td>
                    <td>@forecast.Summary</td>
                    <td><img src=@forecast.ICON/></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<WeatherForecast> forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await ForecastService.GetForecastAsync(DateTime.Now);
    }
}
